{"version":3,"sources":["App.js","serviceWorker.js","index.js","Logo.jpg"],"names":["App","props","_this","request","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isStarted","questions","currentIndex","XMLHttpRequest","open","responseType","onload","reader","FileReader","readAsText","response","e","setState","target","result","match","join","replace","split","splice","send","_this2","react_default","a","createElement","Container","fluid","className","style","backgroundColor","Row","length","Col","xs","textAlign","fontSize","color","concat","width","height","src","Logo","alt","borderRadius","border","onClick","marginTop","prevState","objectSpread","Component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.49ea297b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"../node_modules/bootstrap/scss/bootstrap.scss\";\nimport Logo from \"./Logo.jpg\";\nimport \"./Animations.scss\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisStarted: false,\n\t\t\tquestions: [],\n\t\t\tcurrentIndex: 0,\n\t\t};\n\n\t\t(request => {\n\t\t\trequest.open(\"GET\", \"https://docs.google.com/document/d/1CjiR97piLL1sX-RDEW4XZpfOM9j8dpGPZLJSt8bbsuk/edit\", true);\n\t\t\trequest.responseType = \"blob\";\n\t\t\trequest.onload = () => {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.readAsText(request.response);\n\t\t\t\treader.onload = e => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tquestions: e.target.result\n\t\t\t\t\t\t\t.match(/QUESTIONS\\\\n(.)+\\?/g)\n\t\t\t\t\t\t\t.join()\n\t\t\t\t\t\t\t.replace(/\\\\u0027/g, \"'\")\n\t\t\t\t\t\t\t.split(/\\\\n/g)\n\t\t\t\t\t\t\t.splice(1),\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t};\n\t\t\treturn request;\n\t\t})(new XMLHttpRequest()).send();\n\t}\n\n\trender() {\n\t\tconst fontSize = \"5vh\";\n\t\treturn (\n\t\t\t<Container fluid className=\"vh-100\" style={{ backgroundColor: \"rgb(35,58,61\" }}>\n\t\t\t\t<Row className=\"h-100 align-items-center\">\n\t\t\t\t\t{this.state.questions.length === 0 ? (\n\t\t\t\t\t\t<Col xs=\"12\" style={{ textAlign: \"center\", fontSize: fontSize, color: \"rgb(200,200,200)\" }}>\n\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Col xs=\"12\">\n\t\t\t\t\t\t\t<Row className=\"justify-content-center\" style={{ textAlign: \"center\" }}>\n\t\t\t\t\t\t\t\t<Col xs=\"12\" className={this.state.isStarted ? \"fade-in-delayed\" : \"invisible\"} style={{ fontSize: fontSize, color: \"rgb(200,200,200)\" }}>\n\t\t\t\t\t\t\t\t\t{this.state.questions[this.state.currentIndex]}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs=\"auto\" className={`mb-3 d-flex ${this.state.isStarted ? \"start-animation\" : \"\"}`}>\n\t\t\t\t\t\t\t\t\t<div className={this.state.isStarted ? \"shrink-animation-delayed\" : \"\"} style={{ width: \"50vh\", height: \"50vh\" }}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={Logo}\n\t\t\t\t\t\t\t\t\t\t\talt=\"Logo\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={this.state.isStarted ? \"shrink-animation-delayed\" : \"\"}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", borderRadius: \"100%\", border: \"2px white solid\" }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.setState({ isStarted: true })}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs=\"12\" className={this.state.isStarted ? \"fade-out\" : \"\"} style={{ fontSize: fontSize, color: \"rgb(200,200,200)\" }}>\n\t\t\t\t\t\t\t\t\tPress Logo to Start\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs=\"auto\" className={`${this.state.isStarted ? \"fade-in-delayed\" : \"d-none\"}`} style={{ marginTop: \"40vh\" }}>\n\t\t\t\t\t\t\t\t\t<div style={{ width: \"10vh\", height: \"10vh\" }}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={Logo}\n\t\t\t\t\t\t\t\t\t\t\talt=\"Logo\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", borderRadius: \"100%\", border: \"2px white solid\" }}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState(prevState => ({ ...prevState, currentIndex: prevState.currentIndex === prevState.questions.length - 1 ? 0 : prevState.currentIndex + 1 }))\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.76f970b5.jpg\";"],"sourceRoot":""}